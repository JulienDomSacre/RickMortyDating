apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion rootProject.ext.compile_sdk
    defaultConfig {
        applicationId "com.juliensacre.rickmortydating"
        minSdkVersion rootProject.ext.min_sdk
        targetSdkVersion rootProject.ext.target_sdk
        versionCode rootProject.ext.version_code
        versionName rootProject.ext.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            dimension "default"
        }
        prod {
            dimension "default"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.flavors[0].name == 'mock') {
            variant.ignore = true
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$rootProject.ext.support_library"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.ext.support_v4"
    implementation "androidx.core:core-ktx:$rootProject.ext.kotlin_core"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.ext.kotlin_coroutine"

    //Widget
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraint_layout"
    implementation "androidx.paging:paging-runtime:$rootProject.ext.paging_version"
    implementation "androidx.recyclerview:recyclerview:$rootProject.ext.recycler_view"
    implementation "com.android.support:cardview-v7:$rootProject.ext.cardview_layout"

    implementation "com.jakewharton.timber:timber:$rootProject.ext.retrofit" //log
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glide_image_loader"
    kapt "com.github.bumptech.glide:compiler:$rootProject.ext.glide_image_loader"
    implementation "org.koin:koin-android:$rootProject.ext.koin_di"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$rootProject.ext.retrofit_coroutine_adapter"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.retrofit_log"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.retrofit_log"
    implementation "com.google.code.gson:gson:$rootProject.ext.gson"

    //Test
    testImplementation "junit:junit:$rootProject.ext.junit"
    androidTestImplementation "androidx.test:runner:$rootProject.ext.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espresso"
    testImplementation "org.hamcrest:hamcrest-library:$rootProject.ext.hamcrest"
    testImplementation "androidx.arch.core:core-testing:$rootProject.ext.lifecycle"
    testImplementation "androidx.room:room-testing:$rootProject.ext.room"

    //AAR
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.ext.lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$rootProject.ext.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.ext.lifecycle"
    implementation "android.arch.navigation:navigation-fragment-ktx:$rootProject.ext.navigation_fragment"
    implementation "android.arch.navigation:navigation-ui-ktx:$rootProject.ext.navigation_fragment"
    implementation "androidx.room:room-runtime:$rootProject.ext.room"
    kapt "androidx.room:room-compiler:$rootProject.ext.room"
    implementation "androidx.room:room-coroutines:$rootProject.ext.room"




}
